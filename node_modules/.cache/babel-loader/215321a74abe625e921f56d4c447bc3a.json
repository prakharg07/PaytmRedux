{"ast":null,"code":"import axios from'axios';import{FETCH_USERS_REQUEST,FETCH_USERS_SUCCESS,FETCH_USERS_FAILURE}from'./userTypes';export var fetchUsers=function fetchUsers(){return function(dispatch){dispatch(fetchUsersRequest());axios.get('https://run.mocky.io/v3/ac16875e-5629-4478-90d4-0e3660ae0e02').then(function(response){// response.data is the users\nvar users=response.data;dispatch(fetchUsersSuccess(users));}).catch(function(error){// error.message is the error message\ndispatch(fetchUsersFailure(error.message));});};};export var fetchUsersRequest=function fetchUsersRequest(){return{type:FETCH_USERS_REQUEST};};export var fetchUsersSuccess=function fetchUsersSuccess(users){return{type:FETCH_USERS_SUCCESS,payload:users};};export var fetchUsersFailure=function fetchUsersFailure(error){return{type:FETCH_USERS_FAILURE,payload:error};};","map":{"version":3,"sources":["C:/Users/prakh/Desktop/paytmapp/src/redux/user/userActions.js"],"names":["axios","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","fetchUsers","dispatch","fetchUsersRequest","get","then","response","users","data","fetchUsersSuccess","catch","error","fetchUsersFailure","message","type","payload"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,mBADF,CAEEC,mBAFF,CAGEC,mBAHF,KAIO,aAJP,CAMA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,MAAO,UAACC,QAAD,CAAc,CACnBA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR,CACAN,KAAK,CACFO,GADH,CACO,8DADP,EAEGC,IAFH,CAEQ,SAAAC,QAAQ,CAAI,CAChB;AACA,GAAMC,CAAAA,KAAK,CAAGD,QAAQ,CAACE,IAAvB,CACAN,QAAQ,CAACO,iBAAiB,CAACF,KAAD,CAAlB,CAAR,CACD,CANH,EAOGG,KAPH,CAOS,SAAAC,KAAK,CAAI,CACd;AACAT,QAAQ,CAACU,iBAAiB,CAACD,KAAK,CAACE,OAAP,CAAlB,CAAR,CACD,CAVH,EAWD,CAbD,CAcD,CAfM,CAiBP,MAAO,IAAMV,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACrC,MAAO,CACLW,IAAI,CAAEhB,mBADD,CAAP,CAGD,CAJM,CAMP,MAAO,IAAMW,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAF,KAAK,CAAI,CACxC,MAAO,CACLO,IAAI,CAAEf,mBADD,CAELgB,OAAO,CAAER,KAFJ,CAAP,CAID,CALM,CAOP,MAAO,IAAMK,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAD,KAAK,CAAI,CACxC,MAAO,CACLG,IAAI,CAAEd,mBADD,CAELe,OAAO,CAAEJ,KAFJ,CAAP,CAID,CALM","sourcesContent":["import axios from 'axios'\r\nimport {\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_SUCCESS,\r\n  FETCH_USERS_FAILURE\r\n} from './userTypes'\r\n\r\nexport const fetchUsers = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchUsersRequest())\r\n    axios\r\n      .get('https://run.mocky.io/v3/ac16875e-5629-4478-90d4-0e3660ae0e02')\r\n      .then(response => {\r\n        // response.data is the users\r\n        const users = response.data\r\n        dispatch(fetchUsersSuccess(users))\r\n      })\r\n      .catch(error => {\r\n        // error.message is the error message\r\n        dispatch(fetchUsersFailure(error.message))\r\n      })\r\n  }\r\n}\r\n\r\nexport const fetchUsersRequest = () => {\r\n  return {\r\n    type: FETCH_USERS_REQUEST\r\n  }\r\n}\r\n\r\nexport const fetchUsersSuccess = users => {\r\n  return {\r\n    type: FETCH_USERS_SUCCESS,\r\n    payload: users\r\n  }\r\n}\r\n\r\nexport const fetchUsersFailure = error => {\r\n  return {\r\n    type: FETCH_USERS_FAILURE,\r\n    payload: error\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}